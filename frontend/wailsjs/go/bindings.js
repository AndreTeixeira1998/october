// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
const go = {
  "main": {
    "KoboService": {
      /**
       * BuildContentIndex
       * @param {Array<Content>} arg1 - Go Type: []main.Content
       * @returns {Promise<Content>}  - Go Type: map[string]main.Content
       */
      "BuildContentIndex": (arg1) => {
        return window.go.main.KoboService.BuildContentIndex(arg1);
      },
      /**
       * BuildReadwisePayload
       * @returns {Promise<Array<Highlight>|Error>}  - Go Type: []main.Highlight
       */
      "BuildReadwisePayload": () => {
        return window.go.main.KoboService.BuildReadwisePayload();
      },
      /**
       * CountDeviceBookmarks
       * @returns {Promise<number>}  - Go Type: int64
       */
      "CountDeviceBookmarks": () => {
        return window.go.main.KoboService.CountDeviceBookmarks();
      },
      /**
       * DetectKobos
       * @returns {Promise<Array<Kobo>>}  - Go Type: []main.Kobo
       */
      "DetectKobos": () => {
        return window.go.main.KoboService.DetectKobos();
      },
      /**
       * GetSelectedKobo
       * @returns {Promise<Kobo>}  - Go Type: main.Kobo
       */
      "GetSelectedKobo": () => {
        return window.go.main.KoboService.GetSelectedKobo();
      },
      /**
       * ListDeviceBookmarks
       * @returns {Promise<Array<Bookmark>|Error>}  - Go Type: []main.Bookmark
       */
      "ListDeviceBookmarks": () => {
        return window.go.main.KoboService.ListDeviceBookmarks();
      },
      /**
       * ListDeviceContent
       * @returns {Promise<Array<Content>|Error>}  - Go Type: []main.Content
       */
      "ListDeviceContent": () => {
        return window.go.main.KoboService.ListDeviceContent();
      },
      /**
       * NormaliseText
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<string>}  - Go Type: string
       */
      "NormaliseText": (arg1) => {
        return window.go.main.KoboService.NormaliseText(arg1);
      },
      /**
       * OpenDBConnection
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<Error>}  - Go Type: error
       */
      "OpenDBConnection": (arg1) => {
        return window.go.main.KoboService.OpenDBConnection(arg1);
      },
      /**
       * PromptForLocalDBPath
       * @returns {Promise<Error>}  - Go Type: error
       */
      "PromptForLocalDBPath": () => {
        return window.go.main.KoboService.PromptForLocalDBPath();
      },
      /**
       * SelectKobo
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "SelectKobo": (arg1) => {
        return window.go.main.KoboService.SelectKobo(arg1);
      },
      /**
       * SendBookmarksToReadwise
       * @returns {Promise<number|Error>}  - Go Type: int
       */
      "SendBookmarksToReadwise": () => {
        return window.go.main.KoboService.SendBookmarksToReadwise();
      },
    },
  },

};
export default go;
