name: Release October

on:
  release:
    types: [published]

jobs:
  release:
    name: Release October
    runs-on: macos-latest # We can cross compile but need to be on macOS to notarise
    strategy:
      matrix:
        platform:
          - darwin/amd64
          - darwin/arm64
          - darwin/universal
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm install -g npm
      - run: cd frontend && npm install
      - run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      - run: mkdir frontend/build
      - run: touch frontend/build/placeholder
      - run: wails build -upx -platform ${{ matrix.platform }}
      - name: Compress binary
        run: cd build/bin && zip -r october-$(echo ${{ matrix.platform }} | sed -e 's/\//-/g')-${{ github.event.release-tag_name }}.zip October.*
      - uses: octokit/request-action@v2.x
        name: Get latest release from API
        id: get_latest_release
        with:
          route: GET /repos/{owner}/{repo}/releases/latest
          owner: marcus-crane
          repo: october
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get release URL
        id: get_upload_url
        run: |
          url=$(echo "$response" | jq -r '.upload_url')
          echo "::set-output name=url::$url"
        env:
          response:  ${{ steps.get_latest_release.outputs.data }}
      - name: Upload a Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACT_NAME: october-$(echo ${{ matrix.platform }} | sed -e 's/\//-/g')-${{ github.event.release-tag_name }}
        with:
          upload_url:  ${{ steps.get_upload_url.outputs.url }}
          asset_path: ./build/bin/${{ env.ARTIFACT_NAME }}.zip
          asset_name: ${{ env.ARTIFACT_NAME }}.zip
          asset_content_type: application/zip